AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  VideoProcessing

  Sample SAM Template for VideoProcessing

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Tracing: Active
  Api:
    TracingEnabled: True

Resources:
  VideoProcessingStateMachine:
    Type: AWS::Serverless::StateMachine # More info about State Machine Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-statemachine.html
    Properties:
      DefinitionUri: statemachine/video_processing.asl.json
      DefinitionSubstitutions:
        StartRekognitionJobFunctionArn: !GetAtt StartRekognitionJobFunction.Arn
        CheckRekognitionResultsFunctionArn: !GetAtt CheckRekognitionResultsFunction.Arn
        CreateGraphLoadFilesFunctionArn: !GetAtt CreateGraphLoadFilesFunction.Arn
      Policies: # Find out more about SAM policy templates: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-policy-templates.html
        - LambdaInvokePolicy:
            FunctionName: !Ref StartRekognitionJobFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CheckRekognitionResultsFunction
        - LambdaInvokePolicy:
            FunctionName: !Ref CreateGraphLoadFilesFunction

  StartRekognitionJobFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html
    Properties:
      CodeUri: functions/start_label_detection/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Environment:
        Variables:
          SNS_ROLE: !GetAtt RekognitionRole.Arn
          SNS_TOPIC: !Ref LabelDetectionCompleteTopic
      Policies:
        - AmazonS3FullAccess
        - AmazonRekognitionFullAccess
        - AmazonSQSFullAccess
        - Statement:
            - Sid: PassSnsRolePolicy
              Effect: Allow
              Action:
                - iam:GetRole
                - iam:PassRole
              Resource: !GetAtt RekognitionRole.Arn

  CheckRekognitionResultsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/check_rek_results/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - AmazonS3FullAccess
        - AmazonRekognitionFullAccess

  CreateGraphLoadFilesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/create_graph_load_files/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Policies:
        - AmazonS3FullAccess
      Environment:
        Variables:
          GRAPH_LOAD_STAGING_BUCKET: !Ref GraphLoadStagingBucket

  LabelDetectionCompleteTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub "video-${AWS::AccountId}-${AWS::Region}"

  RekognitionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: video_processing_topic_role
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSNSFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
      AssumeRolePolicyDocument: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "rekognition.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole",
                    "Condition": {}
                }
            ]
        }

  GraphLoadStagingBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      BucketName: !Sub "graph-load-staging-${AWS::AccountId}-${AWS::Region}"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
        BlockPublicPolicy: True
        IgnorePublicAcls: True
        RestrictPublicBuckets: True
      VersioningConfiguration:
        Status: Enabled

Outputs:
  # StockTradingStateMachineHourlyTradingSchedule is an implicit Schedule event rule created out of Events key under Serverless::StateMachine
  # Find out more about other implicit resources you can reference within SAM
  # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-specification-generated-resources.html
  VideoProcessingStateMachineArn:
    Description: "Stock Trading State machine ARN"
    Value: !Ref VideoProcessingStateMachine
#  StockTradingStateMachineRoleArn:
#    Description: "IAM Role created for Stock Trading State machine based on the specified SAM Policy Templates"
#    Value: !GetAtt StockTradingStateMachineRole.Arn
